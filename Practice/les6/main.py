# 39. Даны два массива чисел. Требуется вывести те элементы первого массива(в том порядке, в каком они идут в первом массиве), которых нет во втором массиве. 
# Пользователь вводит число N - количество элементов в первом массиве, затем N чисел - элементы массива. Затем число M - количество элементов во втором массиве. 
# Затем элементы второго массива

# n_list = [int(input('Введите чисо: ')) for _ in range(int(input('Введите количество чисел: ')))]
# m_list = [int(input('Введите чисо: ')) for _ in range(int(input('Введите количество чисел: ')))]
# print(n_list)
# print(m_list)
# # for el in n_list:
# #     if el not in m_list:
# #         print(el)
#         # стандартный вариант

# m_set = set(m_list)
# for el in n_list:
#     if el not in m_set:
#         print(el)
#         # Более быстрый вариант, так как множество проходится быстрее


# raz_list = []
# for i in n_list:
#     if m_list.count(i) < 1:
#         raz_list.append(i)
# print(raz_list)

# for i in n_list:
#     for j in m_list:
#         if i != j:
#             raz_list.append(i)
#             break

# ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 41. Дан массив, состоящий из целых чисел. Напишите программу, которая в данном массиве определит количество элементов, у которых два соседних и, при этом, 
# оба соседних элемента меньше данного. Сначала вводится число N — количество элементов в массиве Далее записаны N чисел — элементы массива. Массив состоит
# из целых чисел.

# n = int(input("Введите количество элементов: "))
# n_list = []
# for _ in range(n):
#     n_list.append(int(input("Введите число: ")))
# print(n_list)

# # второй вариант создания листа
# n_list = [int(input()) for _ in range(int(input('Введите количество чисел: ')))]

# count = 0
# for i in range(1, len(n_list) - 1):
#     if n_list[i - 1] < n_list[i] > n_list[i + 1]:
#         count += 1
# print(count)

# ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 43. Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу. Считается, что любые два элемента, равные друг другу образуют одну пару, 
# которую необходимо посчитать.
# Вводится список чисел. Все числа списка находятся на разных строках.

# n_list = []
# n = int(input('Введите число: '))
# while n > 0:
#     n_list.append(n)
#     n = int(input('Введите число: '))
# print(n_list)
# count = 0
# n_list1 = []
# for i in n_list:
#     if n_list.count(i) > 1 and i not in n_list1:
#         count += 1
#         n_list1.append(i)
# print(count)

# второй способ генерации списка:
# some_list = []
# while True:
#     number = int(input('Введите число: '))
#     if number == 0:
#         break
#     some_list.append(number)

# count_dict = {}

# for el in some_list:
#     if count_dict.get(el):
#         count_dict[el] += 1
#     else:
#         count_dict[el] = 1
# print(count_dict)

# count = 0
# for value in count_dict.values():
#     count += value // 2
#     print(count)

# ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 45. Два различных натуральных числа n и m называются дружественными, если сумма делителей числа n (включая 1, но исключая само n) равна числу m и наоборот.
# Например, 220 и 284 – дружественные числа. По данному числу k выведите все пары дружественных чисел, каждое из которых не превосходит k.
# Программа получает на вход одно натуральное число k, не превосходящее 10 ** 5. Программа должна вывести  все пары дружественных чисел, каждое из которых не превосходит k. 
# Пары необходимо выводить по одной в строке, разделяя пробелами. Каждая пара должна быть выведена только один раз (перестановка чисел новую пару не дает).

# def sum_div(n):
#     summa = 0
#     for i in range(1, n // 2 + 1):
#         if n % i == 0:
#             summa += i
#     return summa

# summ_dict = {} # 284: 220,

# k = int(input())
# for number in range(2, k + 1):
#     if number in summ_dict:
#         if sum_div(number) == summ_dict[number]:
#             print(number, summ_dict[number])
#     summ_dict[sum_div(number)] = number













# ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------


